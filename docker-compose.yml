# docker-compose.yml
version: '3.8'

services:
  # The Rust Application Service
  app:
    # Build the image from the Dockerfile in the current directory
    build: .
    image: schedule-voter-app
    restart: unless-stopped
    ports:
      - "8003:8080"
    environment:
      DATABASE_URL: "postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}"
      
      # This is the external URL of this app
      EXT_URL: ${APP_EXTERNAL_URL}

      # These are just the port and bind address inside the container. You usually don't need to chang that.
      PORT: ${APP_PORT}
      HOST: ${APP_HOST}

      RUST_LOG: ${RUST_LOG}

      # OpenID configuration, the callback URL is always /admin/callback
      OPENID_ENABLED: ${OPENID_ENABLED}
      OPENID_ISSUERURL: ${OPENID_ISSUERURL}
      OPENID_CLIENTID: ${OPENID_CLIENTID}
      OPENID_CLIENTSECRET: ${OPENID_CLIENTSECRET}

      # Can new users create conferences? Set to true when you want that.
      # Suggestion: Set to true, let the admin login, then set to false and restart the container.
      NEW_USERS_CAN_CREATE: ${NEW_USERS_CAN_CREATE}

      # To which conference a request to / should be redirected
      DEFAULT_REDIRECT: ${DEFAULT_REDIRECT}
    depends_on:
      db:
        condition: service_healthy

  db:
    image: postgres:16
    container_name: schedule-voter-db
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
